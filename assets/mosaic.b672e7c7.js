class t{constructor(t,e={}){this.originalImgData=null,this.downPoint=null,this.points=[],this.ops=[],this.mosaicSize=3,this.brushWidth=40,Object.assign(this,e),this.canvas=t,this.ctx=t.getContext("2d"),this.mouseDownHandler=this.mouseDownHandler.bind(this),this.documentMouseMoveHandle=this.documentMouseMoveHandle.bind(this),this.documentMouseUpHandle=this.documentMouseUpHandle.bind(this),t.addEventListener("mousedown",this.mouseDownHandler)}async init(t){await s(this.canvas,t);const{width:e,height:o}=this.canvas;this.originalImgData=this.ctx.getImageData(0,0,e,o)}destroy(){this.canvas.onmousedown=null,this.canvas.removeEventListener("mousedown",this.mouseDownHandler)}mouseDownHandler(t){t.stopImmediatePropagation(),document.onselectstart=()=>!1,this.downPoint=[t.pageX-this.canvas.offsetLeft,t.pageY-this.canvas.offsetTop],this.points=[],document.addEventListener("mousemove",this.documentMouseMoveHandle),document.addEventListener("mouseup",this.documentMouseUpHandle)}documentMouseMoveHandle(t){if(!this.downPoint)return;t.stopImmediatePropagation();const e=[t.pageX-this.canvas.offsetLeft,t.pageY-this.canvas.offsetTop];this.dealMosaicXY(e)}documentMouseUpHandle(t){this.downPoint=null,document.removeEventListener("mousemove",this.documentMouseMoveHandle),document.removeEventListener("mouseup",this.documentMouseUpHandle),document.onselectstart=null,this.points=[]}dealMosaicXY(t){const e=this.brushWidth-~~(this.brushWidth/this.mosaicSize/2)*this.mosaicSize*2;let[s,o]=t;s=+Math.round((s-e)/this.mosaicSize/2)*this.mosaicSize*2,o=+Math.round((o-e)/this.mosaicSize/2)*this.mosaicSize*2,t=[s,o];const i=this.points.slice(-1)[0];i&&i[0]===s&&i[1]===o||-1===this.points.findIndex((t=>t[0]===s&&t[1]===o))&&(this.points.push(t),this.drawMosaic(t))}drawMosaic(t){const{mosaicSize:e,brushWidth:s}=this,o=~~(s/e/2),i=s-o*e*2,{width:n,height:a}=this.canvas,h=this.originalImgData.data,c=this.ctx.getImageData(0,0,n,a);let d=c.data;const[m,u]=t;for(var r=m-e*o,l=m+e*o+i;r<l;r+=2*e)for(var g=u-e*o,p=u+e*o+i;g<p;g+=2*e){let[t,o,a]=[0,0,0],c=[];for(let d=r,M=r+2*e;d<M;d++)for(let r=g,l=g+2*e;r<l;r++){const e=4*(r*n+d);(r-u+i/2)**2+(d-m+i/2)**2<=(s/2)**2&&c.push(e),t+=h[e],o+=h[e+1],a+=h[e+2]}const l=(2*e)**2,[p,v,w]=[t/l,o/l,a/l];for(let e=0;e<c.length;e++){const t=c[e];d[t]=p,d[t+1]=v,d[t+2]=w}}this.ctx.putImageData(c,0,0,0,0,n,a)}}const e=()=>new Promise(((t,e)=>{const s=document.createElement("input");s.type="file",s.accept="image/*",s.onchange=()=>{const{files:o}=s;(!o||o.length<=0)&&e();const i=Array.from(o)[0];i.type.startsWith("image/")?t(i):e()},s.click()})),s=(t,e)=>new Promise(((s,o)=>{const i=URL.createObjectURL(e),n=new Image;n.onload=()=>{const{naturalWidth:e,naturalHeight:o}=n,a=t.getContext("2d");Object.assign(t,{width:e,height:o}),a.drawImage(n,0,0,e,o),URL.revokeObjectURL(i),s(t)},n.onerror=t=>{o(t),URL.revokeObjectURL(i)},n.src=i}));export{t as M,e as l};
